AWSTemplateFormatVersion: "2010-09-09"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  SubnetID:
    Type: String
  
  ProjectName:
    Default: ecs-fnol
    Type: String

  TargetGroupName:
    Type: String
    Default: "tg"
  
  APIContainerName:
    Type: String
    Default: cf-fnol-java-API-fargate

  VpcId:
    Description : "VPC ID"
    Type: AWS::EC2::VPC::Id
    Default: vpc-a2c8c4c5

Resources:
# ------------------------------------------------------------#
#  Target Group
# ------------------------------------------------------------#
  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"    
    Properties:
      VpcId: !Ref VpcId
      Name: !Sub "${ProjectName}-${TargetGroupName}"
      Protocol: HTTP
      Port: 80
      TargetType: ip

# ------------------------------------------------------------#
#  Internet ALB
# ------------------------------------------------------------#
  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: fnol-prj-fargate-cluster
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: fnol-prj-fargate-cluster-log-group
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: fnol-prj-fargate-cluster-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: fnol-api-sg
      GroupDescription: Security group to allow port 80 to be open. accept the request from port 8080 for API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupName: fnol-api-sg
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: cf-fnol-API-fargate
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: fnol-java-API-fargate
          Image: 964803402269.dkr.ecr.ap-northeast-1.amazonaws.com/ecs-api-main
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
              
    Properties:
      Family: fnol-tasks-fargate
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: !Sub "${APIContainerName}"
          Image: 964803402269.dkr.ecr.ap-northeast-1.amazonaws.com/ecs-api-main
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
        
        # - Name: fnol-UI-fargate
        #   Image: 964803402269.dkr.ecr.ap-northeast-1.amazonaws.com/ecs-front
        #   PortMappings:
        #     - ContainerPort: 80
        #   LogConfiguration:
        #     LogDriver: awslogs
        #     Options:
        #       awslogs-region: !Ref AWS::Region
        #       awslogs-group: !Ref LogGroup
        #       awslogs-stream-prefix: ecs
  Service:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      ServiceName: fnol-API-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 8080
          ContainerName: !Sub "${APIContainerName}"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetID
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      # SubnetMappings:
      Name: ecs-alb2
      SecurityGroups:
        - !GetAtt ContainerSecurityGroup.GroupId
      Subnets:
        - subnet-bca168f4
        - subnet-c8635893
      Type: application